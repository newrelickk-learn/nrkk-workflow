version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.newrelic
      args:
        NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY:-}
        NEW_RELIC_APPNAME: ${NEW_RELIC_APP_NAME:-Approval Workflow}
        COMMIT_SHA: ${COMMIT_SHA:-development}
    container_name: approval-workflow-app-newrelic
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - newrelic_logs:/var/log/newrelic
    networks:
      - approval-network
    depends_on:
      - database
    environment:
      - DB_HOST=database
      - DB_DATABASE=approval_workflow
      - DB_USERNAME=root
      - DB_PASSWORD=rootpassword
      - NEW_RELIC_ENABLED=${NEW_RELIC_ENABLED:-true}
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY:-}
      - NEW_RELIC_APP_NAME=${NEW_RELIC_APP_NAME:-Approval Workflow}
      - NEW_RELIC_METADATA_COMMIT=${COMMIT_SHA:-development}

  webserver:
    image: nginx:alpine
    container_name: approval-workflow-nginx-newrelic
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - approval-network
    depends_on:
      - app

  database:
    image: mariadb:10.9
    container_name: approval-workflow-db-newrelic
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: approval_workflow
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    volumes:
      - db_data_newrelic:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - approval-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: approval-workflow-pma-newrelic
    restart: unless-stopped
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - "8081:80"
    networks:
      - approval-network
    depends_on:
      - database

  # New Relic Infrastructure Agent (optional)
  newrelic-infra:
    image: newrelic/infrastructure:latest
    container_name: approval-workflow-newrelic-infra
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - NRIA_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY:-}
      - NRIA_VERBOSE=1
      - NRIA_DISPLAY_NAME=approval-workflow-host
    profiles:
      - monitoring

volumes:
  db_data_newrelic:
    driver: local
  newrelic_logs:
    driver: local

networks:
  approval-network:
    driver: bridge